//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        maven { url = "https://maven.aliyun.com/repository/public" }
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
//        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
//        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'idea'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '1.0.0'
group = 'cn.breadnicecat.candycraft'
boolean isSnapshot = true
String mcversion = "1.18.2"
archivesBaseName = "CandyCraft" + (isSnapshot ? ("-snapshot" + new Date().format("-yyyyMMdd")) : "") + "-forge-" + mcversion


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'candycraft'
            mods {
                candycraft {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'candycraft'

            mods {
                candycraft {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'candycraft'
            mods {
                candycraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'candycraft', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                candycraft {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir "libs"
    }
    maven { url = "https://maven.aliyun.com/repository/public" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.7'
    implementation fg.deobf("mezz.jei:jei-1.18.2:9.7.2.281")//JEI
    runtimeOnly fg.deobf("a:Jade:1.18.2-forge-5.2.6")//Jade
    runtimeOnly fg.deobf("a:configured:2.0.0-1.18.2")//配置文件修改
    runtimeOnly fg.deobf("a:bettertags:1.18.2-1.0")//看nbt
    runtimeOnly fg.deobf("a:IconRenderer:Forge-1.0.2-1.18.2")//导出物品for mcmod
//    runtimeOnly fg.deobf("a:RecipeDumper:2.0-Forge")//导出配方for mcmod
    //    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "candycraft",
                "Specification-Vendor"    : "Bread_NiceCat",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Bread_NiceCat",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
//mixin {
//    add sourceSets.main, "candycraft.refmap.json"
//    config "candycraft.mixins.json"
//
//    mixin.hotSwap = true
//    mixin.debug.export = true
//    mixin.debug.verbose = true
//}